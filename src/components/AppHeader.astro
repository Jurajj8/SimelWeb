---
import Container from "./Container.astro";
import { translations } from "../locales.ts";

const currentPath = Astro.url.pathname;
const currentLang = currentPath.split('/')[1] || 'sk';
const t = translations[currentLang] || translations.sk;

const createLocalizedPath = (path) => `/${currentLang}${path === "/" ? "" : path}`;

const languages = [
  { code: "sk", label: "Slovensky" },
  { code: "en", label: "English" },
  { code: "de", label: "Deutsch" }
];

const languageLinks = languages.map(lang => ({
  code: lang.code,
  label: lang.label,
  url: currentPath.replace(`/${currentLang}`, `/${lang.code}`)
}));
---

<header>
  <nav id="nav" class="fixed top-0 left-0 group z-10 w-full border-b border-black/5 lg:border-transparent">
    <Container>
      <div class="relative flex flex-wrap items-center justify-between gap-6 py-3 md:gap-0 md:py-4">
        <div class="relative z-20 flex w-full justify-between md:px-0 lg:w-fit">
          <a href={createLocalizedPath("/")} aria-label="logo" class="flex items-center space-x-2">
            <img src="/2.png" alt="Simel s.r.o. logo" class="h-20 w-auto">
          </a>

          <!-- Tlačidlo pre mobilné menu -->
          <div class="relative flex max-h-10 items-center lg:hidden">
            <button aria-label="hamburger" id="hamburger" class="relative -mr-6 p-6 active:scale-95 duration-300">
              <div aria-hidden="true" id="line" class="m-auto h-0.5 w-5 rounded transition duration-300 bg-white origin-top group-data-[state=active]:rotate-45 group-data-[state=active]:translate-y-1.5"></div>
              <div aria-hidden="true" id="line2" class="m-auto mt-2 h-0.5 w-5 rounded transition duration-300 bg-white origin-bottom group-data-[state=active]:-rotate-45 group-data-[state=active]:-translate-y-1"></div>
            </button>
          </div>
        </div>

        <!-- Pozadie mobilného menu -->
        <div id="navLayer" aria-hidden="true" class="fixed inset-0 z-10 h-screen w-screen origin-bottom scale-y-0 bg-gray-900/90 backdrop-blur-2xl transition duration-500 group-data-[state=active]:origin-top group-data-[state=active]:scale-y-100 dark:bg-gray-950/70 lg:hidden"></div>

        <!-- Navigačné odkazy -->
        <div id="navlinks" class="invisible absolute top-full left-0 z-20 w-full origin-top-right translate-y-1 scale-90 flex-col flex-wrap justify-end gap-6 rounded-3xl border border-gray-100 bg-gray-950/70 p-8 opacity-0 shadow-2xl shadow-gray-600/10 transition-all duration-300 lg:visible lg:relative lg:flex lg:w-fit lg:translate-y-0 lg:scale-100 lg:flex-row lg:items-center lg:gap-0 lg:border-none lg:bg-transparent lg:p-0 lg:opacity-100 lg:shadow-none lg:dark:bg-transparent group-data-[state=active]:visible group-data-[state=active]:scale-100 group-data-[state=active]:opacity-100 lg:group-data-[state=active]:translate-y-0">
          <div class="w-full text-gray-200 lg:w-auto lg:pr-4 lg:pt-0">
            <div id="links-group" class="flex flex-col gap-6 tracking-wide lg:flex-row lg:gap-0 lg:text-sm">
              <a href={createLocalizedPath("/")} class="block text-white md:px-4">
                <span>{t.home}</span>
              </a>
              <a href={createLocalizedPath("/aboutUs")} class="block text-white md:px-4">
                <span>{t.aboutUs}</span>
              </a>
            </div>
          </div>

          <!-- Kontaktovať tlačidlo -->
          <div class="mt-12 lg:mt-0">
            <a href={createLocalizedPath("/contact")} class="relative flex h-9 w-full items-center justify-center px-4 before:absolute before:inset-0 before:rounded-full before:bg-primary before:transition before:duration-300 hover:before:scale-105 active:duration-75 active:before:scale-95 sm:w-max">
              <span class="relative text-sm font-semibold text-white"> {t.contact}</span>
            </a>
          </div>
          <div class="relative flex justify-center lg:ps-8 max-sm:pt-5">
            <button id="language-button" class="flex items-center px-4 py-2  text-white rounded-md hover:bg-gray-700 transition"><!-- bg-gray-800 -->
              🌍 {languageLinks.find(lang => lang.code === currentLang)?.label || "Jazyk"}
              <svg class="w-4 h-4 ml-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
              </svg>
            </button>

            <!-- Dropdown menu, viditeľné podľa Tailwind tried -->
            <ul id="language-dropdown" class="absolute hidden bg-gray-900 text-white shadow-lg rounded-md mt-2 w-40 overflow-hidden transition opacity-0 scale-95 lg:opacity-100 lg:scale-100">
              {languageLinks.map(lang => (
                <li>
                  <a href={lang.url} class="flex items-center px-4 py-2 hover:bg-gray-700 transition">
                    <img src={`/flags/${lang.code}.svg`} alt={lang.label} class="w-5 h-5 mr-2">
                    {lang.label}
                  </a>
                </li>
              ))}
            </ul>
          </div>
        </div>
      </div>
    </Container>
  </nav>
</header>


<script>
    let isToggled = false;
    const navbar = document.querySelector("#nav") as HTMLElement;
    const menuBtn = document.querySelector("#hamburger") as HTMLButtonElement;
    const links = [...navbar.querySelector("#links-group").children] as HTMLAnchorElement[];

    function toggleNavlinks() {
        if (isToggled) {
            navbar.dataset.state = "active";
        } else {
            navbar.dataset.state = "";
        }
    }

    menuBtn.addEventListener("click", () => {
        isToggled = !isToggled;
        toggleNavlinks();
    });

    links.forEach((link) => {
        link.addEventListener("click", () => {
            isToggled = !isToggled;
            toggleNavlinks();
        });
    });
    window.addEventListener("scroll", () => {
  if (window.scrollY > 0) {
    navbar.classList.add("bg-gray-900");
  } else {
    navbar.classList.remove("bg-gray-900");
  }
});

document.addEventListener("DOMContentLoaded", function () {
    const langButton = document.getElementById("language-button");
    const langDropdown = document.getElementById("language-dropdown");

    langButton.addEventListener("click", (event) => {
        event.stopPropagation();
        langDropdown.classList.toggle("hidden");
        langDropdown.classList.toggle("opacity-0");
        langDropdown.classList.toggle("scale-95");
    });

    langDropdown.addEventListener("click", (event) => {
        event.stopPropagation();
    });

    document.addEventListener("click", () => {
        langDropdown.classList.add("hidden");
        langDropdown.classList.add("opacity-0");
        langDropdown.classList.add("scale-95");
    });
});
</script>